[build-system]
requires = [
  "setuptools >= 42",
  "wheel",
  "setuptools_scm[toml]>=3.4"
]

[project]
name =  "mantis"
description = "Acquisition engine for collecting data on the mantis microscope"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9, <4.0"

# the dynamically determined project metadata attributes
dynamic = ["version"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

# list package dependencies here
dependencies = [
    "numpy",
    "pydantic",
    "pycromanager==0.25.40",
    "nidaqmx",
    "iohub==0.1.0.dev3",
    "matplotlib",
]


[project.optional-dependencies]
napari = [
    "napari[all]; 'arm64' not in platform_machine", # with Qt5 and skimage
    "napari; 'arm64' in platform_machine", # without Qt5 and skimage
    "PyQt6; 'arm64' in platform_machine",
]
# note that dev dependencies are only pinned to major versions
dev = [
    "black==22.3.0",
    "flake8~=5.0",
    "isort~=5.12",
    "pre-commit~=2.19",
    "pylint~=2.14",
    "pytest~=7.1",
]
build = [
    "twine",
    "build",
]

[project.scripts]
mantis = "mantis.cli.main:cli"

[tool.setuptools]
# explicitly specify the package name
# TODO: is there a better way to do this?
packages = ["mantis"]

# allow use of __file__ to load data files included in the package
zip-safe = false

[tool.setuptools.dynamic]
version = {attr = "mantis.__version__"}

[tool.black]
line-length = 95
target-version = ['py39', 'py310']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | notebooks
    | ignore
    | examples
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 95
lines_between_types = 1
default_section = "THIRDPARTY"
no_lines_before = ["STDLIB",]
ensure_newline_before_comments = true
skip_glob = ["examples/*"]

[tool.pylint]
# disable all conventions, refactors, warnings (C, R, W) and the following:
# E0401: unable-to-import (since it is possible that no one environment has all required packages)
# E1136: unsubscriptable-object (anecdotal false positives for numpy objects)
disable = ["C", "R", "W", "unsubscriptable-object", "import-error"]
msg-template = "{line},{column},{category},{symbol}:{msg}"
reports = "n"
